<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
      <%= userType.charAt(0).toUpperCase() + userType.slice(1) %> Dashboard -
      tasknest
    </title>
    <link rel="stylesheet" href="/css/style.css" />
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
    <script src="https://cdn.jsdelivr.net/npm/draggable@4.2.0/lib/draggable.min.js"></script>
    <script
      src="https://kit.fontawesome.com/97f768214c.js"
      crossorigin="anonymous"
    ></script>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <%- include('../partials/header') %>
    <main class="container mx-auto px-4 py-12">
      <h1 class="text-3xl font-bold text-gray-800 mb-6">
        Welcome, <%= user.username %>
      </h1>

      <!-- Board View -->
      <div class="flex space-x-4 overflow-x-auto pb-4">
        <% lists.forEach(list => { %>
        <div class="flex-none w-80 bg-gray-100 rounded-lg shadow-md p-4">
          <div class="flex justify-between items-center mb-4">
            <h3
              class="text-lg font-semibold text-gray-800 cursor-pointer"
              onclick="editListTitle('<%= list._id %>', this)"
            >
              <%= list.name %>
            </h3>
            <input
              type="text"
              id="list-title-<%= list._id %>"
              class="hidden w-2/3 px-2 py-1 border rounded-md text-sm"
              onblur="saveListTitle('<%= list._id %>', this)"
              onkeypress="if(event.key === 'Enter') saveListTitle('<%= list._id %>', this)"
            />
            <div class="flex space-x-2">
              <% if (!list.isDefault) { %>
              <div>
                <button
                  id="share-button-<%= list._id %>"
                  class="<%= theme.accent %> hover:<%= theme.accentHover %> text-sm"
                  title="Share List"
                >
                  <i class="fa-regular fa-share-from-square"></i>
                </button>
              </div>
              <form action="/lists/set-default/<%= list._id %>" method="POST">
                <button
                  type="submit"
                  class="<%= theme.accent %> hover:<%= theme.accentHover %> text-sm"
                  title="Set as Default List"
                >
                  <i class="fa-regular fa-square-check"></i>
                </button>
              </form>
              <form action="/lists/delete/<%= list._id %>" method="POST">
                <button
                  type="submit"
                  class="text-red-600 hover:text-red-800 text-sm"
                  title="Delete List"
                >
                  <i class="fa-regular fa-trash-can"></i>
                </button>
              </form>
              <% } else { %>
              <form action="/lists/unset-default" method="POST">
                <button
                  type="submit"
                  class="<%= theme.accent %> hover:<%= theme.accentHover %> text-sm"
                  title="Unset Default List"
                >
                  <i class="fa-regular fa-square-minus"></i>
                </button>
              </form>
              <% } %>
            </div>
          </div>
          <div id="share-form-<%= list._id %>" class="hidden">
            <!-- Share with other users -->
            <form
              id="share-form-<%= list._id %>"
              action="/lists/share/<%= list._id %>"
              method="POST"
              class="mb-3"
            >
              <input
                type="email"
                name="email"
                placeholder="Share with user email"
                required
                class="w-full px-2 py-1 border rounded-md text-sm mb-2"
              />
              <button
                type="submit"
                class="w-full <%= theme.primary %> text-white px-2 py-1 rounded-md hover:<%= theme.primaryHover %> text-sm"
              >
                Share
              </button>
              <button
                type="button"
                onclick="document.getElementById('share-form-<%= list._id %>').classList.add('hidden')"
                class="w-full bg-gray-200 text-gray-800 px-2 py-1 rounded-md hover:bg-gray-300 text-sm mt-2"
              >
                Cancel
              </button>
            </form>
          </div>
          <script>
            document.addEventListener('DOMContentLoaded', () => {
              const shareButton = document.querySelector(
                `#share-button-<%= list._id %>`
              );
              shareButton.addEventListener('click', (e) => {
                e.preventDefault();
                const form = document.getElementById(
                  `share-form-<%= list._id %>`
                );
                if (form.classList.contains('hidden')) {
                  form.classList.remove('hidden');
                } else {
                  form.classList.add('hidden');
                }
              });
            });
          </script>
          <!-- Task Cards -->
          <div class="space-y-3 task-list" data-list-id="<%= list._id %>">
            <% tasks.filter(task => task.list.toString() ===
            list._id.toString()).forEach(task => { %>
            <div
              class="bg-white p-3 rounded-lg shadow-sm task-card"
              data-task-id="<%= task._id %>"
            >
              <h4
                class="text-md font-medium text-gray-800 cursor-pointer"
                onclick="editTaskTitle('<%= task._id %>', this)"
              >
                <%= task.title %>
              </h4>
              <input
                type="text"
                id="task-title-<%= task._id %>"
                class="hidden w-full px-2 py-1 border rounded-md text-sm"
                onblur="saveTaskTitle('<%= task._id %>', this)"
                onkeypress="if(event.key === 'Enter') saveTaskTitle('<%= task._id %>', this)"
              />
              <% if (task.description) { %>
              <p class="text-gray-600 text-sm mt-1 line-clamp-2">
                <%= task.description %>
              </p>
              <% } %>
              <div class="mt-2 flex flex-wrap gap-3 text-sm">
                <span class="text-gray-500"
                  >Status:
                  <span class="font-medium"
                    ><%= task.status.charAt(0).toUpperCase() +
                    task.status.slice(1).replace('_', ' ') %></span
                  ></span
                >
                <span class="text-gray-500"
                  >Priority:
                  <span class="font-medium"
                    ><%= task.priority.charAt(0).toUpperCase() +
                    task.priority.slice(1) %></span
                  ></span
                >
                <% if (task.dueDate) { %>
                <span class="text-gray-500"
                  >Due:
                  <span class="font-medium"
                    ><%= new Date(task.dueDate).toLocaleDateString() %></span
                  ></span
                >
                <% } %> <% if (task.subtasks.length > 0) { %>
                <span class="text-gray-500"
                  >Subtasks:
                  <span class="font-medium"
                    ><%= task.subtasks.filter(st => st.status === 'done').length
                    %>/<%= task.subtasks.length %></span
                  ></span
                >
                <% } %>
              </div>
              <div class="mt-2 flex justify-between">
                <button
                  onclick="openTaskModal('<%= task._id %>', '<%= task.title %>', '<%= task.description || '' %>', '<%= task.priority %>', '<%= task.dueDate ? new Date(task.dueDate).toISOString().split('T')[0] : '' %>', '<%= task.status %>', <%= JSON.stringify(task.subtasks) %>, <%= JSON.stringify(task.comments) %>, <%= JSON.stringify(task.worklog) %>, '<%= task.list %>')"
                  class="<%= theme.accent %> hover:<%= theme.accentHover %> font-medium text-sm"
                >
                  View
                </button>
                <form action="/tasks/delete/<%= task._id %>" method="POST">
                  <button
                    type="submit"
                    class="text-red-600 hover:text-red-800 font-medium text-sm"
                  >
                    Delete
                  </button>
                </form>
              </div>
            </div>
            <% }) %>
          </div>
          <!-- Add Task Button -->
          <button
            onclick="showAddTaskForm('<%= list._id %>')"
            class="mt-3 w-full <%= theme.accent %> hover:<%= theme.accentHover %> text-sm font-medium text-left"
          >
            + Add Task
          </button>
          <div id="add-task-form-<%= list._id %>" class="hidden mt-2">
            <form action="/tasks/add" method="POST" class="space-y-2">
              <input
                type="text"
                name="title"
                placeholder="Task Title"
                required
                class="w-full px-2 py-1 border rounded-md text-sm"
              />
              <input type="hidden" name="listId" value="<%= list._id %>" />
              <div class="flex space-x-2">
                <button
                  type="submit"
                  class="flex-1 <%= theme.primary %> text-white px-2 py-1 rounded-md hover:<%= theme.primaryHover %> text-sm"
                >
                  Add
                </button>
                <button
                  type="button"
                  onclick="hideAddTaskForm('<%= list._id %>')"
                  class="flex-1 bg-gray-200 text-gray-800 px-2 py-1 rounded-md hover:bg-gray-300 text-sm"
                >
                  Cancel
                </button>
              </div>
            </form>
          </div>
        </div>
        <% }) %>
        <!-- Add List Button -->
        <div class="flex-none w-80 flex flex-col items-star">
          <button
            onclick="showAddListForm()"
            class="w-full bg-gray-200 text-gray-800 px-4 py-2 rounded-lg hover:bg-gray-300 text-sm font-medium"
          >
            + Add List
          </button>
          <div id="add-list-form" class="hidden w-full mt-2">
            <form action="/lists/add" method="POST" class="space-y-2">
              <input
                type="text"
                name="name"
                placeholder="List Name"
                required
                class="w-full px-2 py-1 border rounded-md text-sm"
              />
              <div class="flex space-x-2">
                <button
                  type="submit"
                  class="flex-1 <%= theme.primary %> text-white px-2 py-1 rounded-md hover:<%= theme.primaryHover %> text-sm"
                >
                  Add
                </button>
                <button
                  type="button"
                  onclick="hideAddListForm()"
                  class="flex-1 bg-gray-200 text-gray-800 px-2 py-1 rounded-md hover:bg-gray-300 text-sm"
                >
                  Cancel
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Task Modal -->
      <div
        id="taskModal"
        class="fixed inset-0 bg-gray-800 bg-opacity-60 flex items-center justify-center hidden z-50 transition-opacity duration-300"
      >
        <div
          class="bg-white rounded-xl shadow-2xl w-full max-w-4xl flex max-h-[85vh] transform transition-transform duration-300 scale-95"
        >
          <!-- Main Content -->
          <div class="w-2/3 p-8 overflow-y-auto bg-gray-50">
            <h2
              id="modalTitle"
              class="text-2xl font-bold text-gray-800 mb-6"
            ></h2>
            <form id="taskForm" method="POST" class="space-y-6">
              <input type="hidden" id="taskId" name="id" />
              <div>
                <label
                  for="title"
                  class="block text-sm font-medium text-gray-700"
                  >Task Title</label
                >
                <input
                  type="text"
                  name="title"
                  id="title"
                  required
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                />
              </div>
              <div>
                <label
                  for="description"
                  class="block text-sm font-medium text-gray-700"
                  >Description</label
                >
                <textarea
                  name="description"
                  id="description"
                  rows="4"
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                ></textarea>
              </div>
              <div>
                <label
                  for="listId"
                  class="block text-sm font-medium text-gray-700"
                  >List</label
                >
                <select
                  name="listId"
                  id="listId"
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                >
                  <% lists.forEach(list => { %>
                  <option value="<%= list._id %>"><%= list.name %></option>
                  <% }) %>
                </select>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700"
                  >Subtasks</label
                >
                <div id="subtasksContainer" class="space-y-3 mt-2"></div>
                <button
                  type="button"
                  onclick="addSubtask()"
                  class="<%= theme.accent %> hover:<%= theme.accentHover %> text-sm font-medium"
                >
                  + Add Subtask
                </button>
              </div>
              <!-- Tabbed View for Comments and Worklog -->
              <div class="border-t border-gray-200 pt-6">
                <div class="flex border-b border-gray-200">
                  <button
                    type="button"
                    onclick="showTab('comments')"
                    class="px-4 py-2 text-gray-700 font-medium border-b-2 border-transparent hover:<%= theme.tabHover %> comments-tab"
                  >
                    Comments
                  </button>
                  <button
                    type="button"
                    onclick="showTab('worklog')"
                    class="px-4 py-2 text-gray-700 font-medium border-b-2 border-transparent hover:<%= theme.tabHover %> worklog-tab"
                  >
                    Worklog
                  </button>
                </div>
                <div id="commentsTab" class="mt-4">
                  <label
                    for="comment"
                    class="block text-sm font-medium text-gray-700"
                    >New Comment</label
                  >
                  <textarea
                    name="comment"
                    id="comment"
                    rows="2"
                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                  ></textarea>
                  <div id="commentsContainer" class="mt-3 space-y-2"></div>
                </div>
                <div id="worklogTab" class="mt-4 hidden">
                  <label
                    for="worklog"
                    class="block text-sm font-medium text-gray-700"
                    >New Worklog (minutes)</label
                  >
                  <input
                    type="number"
                    name="worklog"
                    id="worklog"
                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                  />
                  <label
                    for="worklogDescription"
                    class="block text-sm font-medium text-gray-700 mt-2"
                    >Worklog Description</label
                  >
                  <textarea
                    name="worklogDescription"
                    id="worklogDescription"
                    rows="2"
                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                  ></textarea>
                  <div id="worklogContainer" class="mt-3 space-y-2"></div>
                </div>
              </div>
              <div class="flex justify-end space-x-2">
                <button
                  type="button"
                  onclick="closeTaskModal()"
                  class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition-colors"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  class="px-4 py-2 <%= theme.primary %> text-white rounded-lg hover:<%= theme.primaryHover %> transition-colors"
                >
                  Save
                </button>
              </div>
            </form>
          </div>
          <!-- Right Sidebar -->
          <div class="w-1/3 bg-gray-100 p-8 border-l border-gray-200">
            <h3 class="text-lg font-semibold text-gray-800 mb-6">
              Task Details
            </h3>
            <div class="space-y-6">
              <div>
                <label
                  for="priority"
                  class="block text-sm font-medium text-gray-700"
                  >Priority</label
                >
                <select
                  name="priority"
                  id="priority"
                  onchange="updateTaskField(this, 'priority')"
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                >
                  <option value="low">Low</option>
                  <option value="medium">Medium</option>
                  <option value="high">High</option>
                </select>
              </div>
              <div>
                <label
                  for="status"
                  class="block text-sm font-medium text-gray-700"
                  >Status</label
                >
                <select
                  name="status"
                  id="status"
                  onchange="updateTaskField(this, 'status')"
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                >
                  <option value="pending">Pending</option>
                  <option value="in_progress">In Progress</option>
                  <option value="done">Done</option>
                  <option value="skip">Skip</option>
                </select>
              </div>
              <div>
                <label
                  for="dueDate"
                  class="block text-sm font-medium text-gray-700"
                  >Due Date</label
                >
                <input
                  type="date"
                  name="dueDate"
                  id="dueDate"
                  onchange="updateTaskField(this, 'dueDate')"
                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 <%= theme.focusRing %> bg-white"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
    <%- include('../partials/footer') %>
    <script src="/js/taskModal.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const taskLists = document.querySelectorAll('.task-list');
        taskLists.forEach((list) => {
          new Draggable(list, {
            draggable: '.task-card',
            dropzone: '.task-list',
            onDrop: async (event) => {
              const taskId = event.element.dataset.taskId;
              const newListId = event.dropzone.dataset.listId;
              try {
                const response = await fetch(`/tasks/update/${taskId}/field`, {
                  method: 'PATCH',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ field: 'list', value: newListId }),
                });
                if (!response.ok) {
                  console.error('Failed to move task');
                }
              } catch (err) {
                console.error('Error moving task:', err);
              }
            },
          });
        });
      });

      function showAddTaskForm(listId) {
        document
          .getElementById(`add-task-form-${listId}`)
          .classList.remove('hidden');
      }

      function hideAddTaskForm(listId) {
        document
          .getElementById(`add-task-form-${listId}`)
          .classList.add('hidden');
      }

      function showAddListForm() {
        document.getElementById('add-list-form').classList.remove('hidden');
      }

      function hideAddListForm() {
        document.getElementById('add-list-form').classList.add('hidden');
      }

      function editListTitle(listId, element) {
        element.classList.add('hidden');
        const input = document.getElementById(`list-title-${listId}`);
        input.classList.remove('hidden');
        input.value = element.textContent.replace(' (Default)', '').trim();
        input.focus();
      }

      async function saveListTitle(listId, input) {
        const title = input.value.trim();
        if (title) {
          try {
            const response = await fetch(`/lists/update/${listId}`, {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ name: title }),
            });
            if (response.ok) {
              const h3 = input.previousElementSibling;
              h3.textContent =
                title +
                (h3.textContent.includes('(Default)') ? ' (Default)' : '');
              h3.classList.remove('hidden');
              input.classList.add('hidden');
            } else {
              console.error('Failed to update list title');
              alert('Failed to update list title');
            }
          } catch (err) {
            console.error('Error updating list title:', err);
            alert('Error updating list title');
          }
        }
      }

      function editTaskTitle(taskId, element) {
        element.classList.add('hidden');
        const input = document.getElementById(`task-title-${taskId}`);
        input.classList.remove('hidden');
        input.value = element.textContent.trim();
        input.focus();
      }

      async function saveTaskTitle(taskId, input) {
        const title = input.value.trim();
        if (title) {
          try {
            const response = await fetch(`/tasks/update-title/${taskId}`, {
              method: 'PATCH',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ title }),
            });
            if (response.ok) {
              const h4 = input.previousElementSibling;
              h4.textContent = title;
              h4.classList.remove('hidden');
              input.classList.add('hidden');
            } else {
              console.error('Failed to update task title');
              alert('Failed to update task title');
            }
          } catch (err) {
            console.error('Error updating task title:', err);
            alert('Error updating task title');
          }
        }
      }
    </script>
  </body>
</html>
